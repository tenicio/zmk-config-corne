/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&mo 3>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I   |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K   |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,   |  .  |  /  | GUI  |
//                    | ALT | LWR | ENT |   | SPC | RSE | CTRL |
                        bindings = <
   &kp ESC   &kp Q       &kp W      &kp E      &kp R          &kp T     &kp Y  &kp U       &kp I      &kp O      &kp P         &kp BSPC
   &kp TAB   &hm LCTRL A &hm LGUI S &hm LALT D &hm LSHFT F    &hp G     &kp H  &hm RSHFT J &hm RALT K &hm RGUI L &hm RCTL SEMI &kp SQT
   &kp LSHFT &kp Z       &kp X      &kp C      &kp V          &kp B     &kp N  &kp M       &kp COMMA  &kp DOT    &kp FSLH      &kp LGUI
                         &kp LALT   &mo 1      &kp RET        &kp SPACE &td0   &kp RCTRL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// |      |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |      |
// | CTRL |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans    &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL
   &trans    &trans   &trans  &trans   &trans   &trans       &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &trans
   &kp LCTRL &trans   &trans  &trans   &trans   &trans       &trans    &trans    &trans          &trans   &kp BSLH &kp TILDE
                              &trans   &trans   &trans       &trans    &trans    &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL  |
// |      | F1  | F2  | F3  | F4  | F5  |   | F6  |  4  |  5  |  6  |  +  |  -   |
// | CTRL | F7  | F8  | F9  | F10 | F11 |   | F12 |  1  |  2  |  3  |  *  |  /   |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4  &kp N5     &kp N6  &kp N7 &kp N8    &kp N9 &kp N0          &kp DEL
   &trans    &kp F1 &kp F2 &kp F3 &kp F4  &kp F5     &kp F6  &kp N4 &kp N5    &kp N6 &kp PLUS        &kp MINUS
   &kp LCTRL &kp F7 &kp F8 &kp F9 &kp F10 &kp F11    &kp F12 &kp N1 &kp N2    &kp N3 &kp KP_MULTIPLY &kp FSLH
                           &trans &trans  &trans     &trans  &trans &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     | LFT | DWN |  UP | RGT |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans    &trans &trans   &trans   &trans &trans    &trans
   &trans &trans &trans &trans &trans &trans    &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &trans &trans &trans &trans &trans &trans    &trans &trans   &trans   &trans &trans    &trans
                        &trans &trans &trans    &trans &trans   &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     |     |     |     |     |   |     |     |     |     |     |BTCLR |
// |     | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |RGBT  |
// |     | OTG | BLE | USB |     |     |   |     |     |     |     |     |      |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &bt BT_CLR &trans       &trans       &trans       &trans       &trans          &trans &trans &trans &trans &trans &bt BT_CLR
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &trans &trans &trans &trans &trans &rgb_ug RGB_TOG
   &trans     &out OUT_TOG &out OUT_BLE &out OUT_USB &trans       &trans          &trans &trans &trans &trans &trans &trans
                                        &trans       &trans       &trans          &trans &trans &trans
                        >;
                };
        };
};
