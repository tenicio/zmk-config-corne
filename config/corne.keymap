/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E    &kp R &kp T     &kp Y     &kp U &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB   &kp A &kp S &kp D    &kp F &kp G     &kp H     &kp J &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C    &kp V &kp B     &kp N     &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                         &kp LGUI &mo 1 &kp RET   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL  |
// |      |     |     |     |     |     |   |     | LFT | DWN |  UP | RGT |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7   &kp N8   &kp N9 &kp N0    &kp DEL
   &trans    &trans &trans &trans &trans &trans &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &kp LSHFT &trans &trans &trans &trans &trans &trans &trans
                           &trans &trans &trans &trans &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |      |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans    &kp EXCL &kp AT  &kp HASH &kp DLLR  &kp PRCNT &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL
   &kp LCTRL &trans   &trans  &trans   &trans    &trans    &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &trans
   &kp LSHFT &trans   &trans  &trans   &trans    &trans    &trans    &trans    &trans          &trans   &kp BSLH &kp TILDE
                              &trans   &trans    &trans    &trans    &trans    &trans
                        >;
                };
        };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |     |     |     |     |BTCLR |
// |     | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |RGBT  |
// |     | OTG | BLE | USB |     |     |   |     |     |     |     |     |      |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans &bt BT_CLR
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &rgb_ug RGB_TOG
   &trans &out OUT_TOG &out OUT_BLE &out OUT_USB &trans       &trans       &trans &trans &trans &trans &trans &trans
                                    &trans       &trans       &trans       &trans &trans &trans
                        >;
                };
        };
};
